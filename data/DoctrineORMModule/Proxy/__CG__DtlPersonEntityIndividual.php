<?php

namespace DoctrineORMModule\Proxy\__CG__\DtlPerson\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Individual extends \DtlPerson\Entity\Individual implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'cpf', 'rg', 'rgDate', 'rgOrgan', 'rgUf', 'birthday', 'birthDate', 'birthMonth', 'birthYear', 'gender', 'father', 'mother', 'birthPlace', 'birthUf', 'nationality', 'status', 'professional', 'occupation'];
        }

        return ['__isInitialized__', 'id', 'cpf', 'rg', 'rgDate', 'rgOrgan', 'rgUf', 'birthday', 'birthDate', 'birthMonth', 'birthYear', 'gender', 'father', 'mother', 'birthPlace', 'birthUf', 'nationality', 'status', 'professional', 'occupation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Individual $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCpf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpf', []);

        return parent::getCpf();
    }

    /**
     * {@inheritDoc}
     */
    public function getRg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRg', []);

        return parent::getRg();
    }

    /**
     * {@inheritDoc}
     */
    public function getRgDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRgDate', []);

        return parent::getRgDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getRgOrgan()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRgOrgan', []);

        return parent::getRgOrgan();
    }

    /**
     * {@inheritDoc}
     */
    public function getRgUf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRgUf', []);

        return parent::getRgUf();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthday()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthday', []);

        return parent::getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDate', []);

        return parent::getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthMonth', []);

        return parent::getBirthMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthYear', []);

        return parent::getBirthYear();
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function getFather()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFather', []);

        return parent::getFather();
    }

    /**
     * {@inheritDoc}
     */
    public function getMother()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMother', []);

        return parent::getMother();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthPlace', []);

        return parent::getBirthPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthUf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthUf', []);

        return parent::getBirthUf();
    }

    /**
     * {@inheritDoc}
     */
    public function getNationality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNationality', []);

        return parent::getNationality();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getProfessional()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfessional', []);

        return parent::getProfessional();
    }

    /**
     * {@inheritDoc}
     */
    public function getOccupation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOccupation', []);

        return parent::getOccupation();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setCpf($cpf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpf', [$cpf]);

        return parent::setCpf($cpf);
    }

    /**
     * {@inheritDoc}
     */
    public function setRg($rg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRg', [$rg]);

        return parent::setRg($rg);
    }

    /**
     * {@inheritDoc}
     */
    public function setRgDate($rgDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRgDate', [$rgDate]);

        return parent::setRgDate($rgDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setRgOrgan($rgOrgan)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRgOrgan', [$rgOrgan]);

        return parent::setRgOrgan($rgOrgan);
    }

    /**
     * {@inheritDoc}
     */
    public function setRgUf($rgUf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRgUf', [$rgUf]);

        return parent::setRgUf($rgUf);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthday($birthday)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthday', [$birthday]);

        return parent::setBirthday($birthday);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDate($birthDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDate', [$birthDate]);

        return parent::setBirthDate($birthDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthMonth($birthMonth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthMonth', [$birthMonth]);

        return parent::setBirthMonth($birthMonth);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthYear($birthYear)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthYear', [$birthYear]);

        return parent::setBirthYear($birthYear);
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function setFather($father)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFather', [$father]);

        return parent::setFather($father);
    }

    /**
     * {@inheritDoc}
     */
    public function setMother($mother)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMother', [$mother]);

        return parent::setMother($mother);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthPlace($birthPlace)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthPlace', [$birthPlace]);

        return parent::setBirthPlace($birthPlace);
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthUf($birthUf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthUf', [$birthUf]);

        return parent::setBirthUf($birthUf);
    }

    /**
     * {@inheritDoc}
     */
    public function setNationality($nationality)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNationality', [$nationality]);

        return parent::setNationality($nationality);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setProfessional(\DtlPerson\Entity\Professional $professional)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfessional', [$professional]);

        return parent::setProfessional($professional);
    }

    /**
     * {@inheritDoc}
     */
    public function setOccupation(\DtlOccupation\Entity\Occupation $occupation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOccupation', [$occupation]);

        return parent::setOccupation($occupation);
    }

}
